name: Continous Integration


on:
  push:
    branches: ['main']
    paths:
      - frontend/**
  pull_request:
    branches: ['**']
    paths:
      - frontend/**

permissions:
  id-token: write
  contents: read


defaults:
  run:
    working-directory: frontend

env:
  CHECKOUT_REF: ${{ github.ref }}

jobs:
  lint:
    name: 'Lint'
    runs-on: ubuntu-latest
    steps:
      # ----------------------- start of common steps -----------------------

      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ env.CHECKOUT_REF }}

      - uses: actions/setup-node@v3
        name: Setup Node
        with:
          node-version-file: 'frontend/.nvmrc'
          cache: 'npm'
          cache-dependency-path: 'frontend/package-lock.json'

      - name: Cache node_modules
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules-v1
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-
            ${{ runner.os }}-

      - name: Cache eslint
        uses: actions/cache@v3
        env:
          cache-name: cache-eslint-v2
        with:
          path: frontend/node_modules/.cache/eslint
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('pages/**/*.ts', 'pages/**/*.tsx') }}-${{ hashFiles('src/**/*.ts', 'src/**/*.tsx') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-
            ${{ runner.os }}-
      - name: Cache Next
        uses: actions/cache@v3
        with:
          # See here for caching with `yarn` https://github.com/actions/cache/blob/main/examples.md#node---yarn or you can leverage caching with actions/setup-node https://github.com/actions/setup-node
          path: |
            ~/.npm
            ${{ github.workspace }}/frontend/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

      - name: Install dependencies
        run: npm install

      # ----------------------- end of common steps -----------------------

      - name: Lint
        run: npm run format
        continue-on-error: true
      - name: Annotate Code Linting Results
        uses: ataylorme/eslint-annotate-action@v2
        with:
          repo-token: '${{ secrets.GITHUB_TOKEN }}'
          report-json: 'frontend/eslint_report.json'
  build:
    name: 'Build'
    runs-on: ubuntu-latest
    steps:
      # ----------------------- start of common steps -----------------------

      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ env.CHECKOUT_REF }}

      - uses: actions/setup-node@v3
        name: Setup Node
        with:
          node-version-file: 'frontend/.nvmrc'
          cache: 'npm'
          cache-dependency-path: 'frontend/package-lock.json'

      - name: Cache node_modules
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules-v1
        with:
          path: frontend/node_modules
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-
            ${{ runner.os }}-

      - name: Cache eslint
        uses: actions/cache@v3
        env:
          cache-name: cache-eslint-v2
        with:
          path: frontend/node_modules/.cache/eslint
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('pages/**/*.ts', 'pages/**/*.tsx') }}-${{ hashFiles('src/**/*.ts', 'src/**/*.tsx') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-
            ${{ runner.os }}-

      - name: Install dependencies
        run: npm install

      # ----------------------- end of common steps -----------------------
      - name: Build
        run: npm run build --if-present

